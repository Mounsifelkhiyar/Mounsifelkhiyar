/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jdom;
import java.io.*; 
import org.jdom.*; 
import org.jdom.input.*; 
import org.jdom.filter.*; 
import java.util.List; 
import java.util.Iterator;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import org.dom4j.DocumentException;
import org.dom4j.DocumentHelper;
import org.dom4j.io.SAXReader;
import org.jdom.output.Format;
import org.jdom.output.XMLOutputter;
import org.jdom.xpath.XPath;
import org.xml.sax.SAXException;
/**
 *
 * @author mouns
 */
public class parc extends javax.swing.JFrame {
    
    static Element racine=new Element("FILMS");
    static org.jdom.Document document =new Document(racine);
    String fichier="C:/Users/mouns/Desktop/Films.xml";
    //SAXBuilder sxb=null;
    //static Reader r=null;
    
    public parc() {
        initComponents();
        setLocation(460,160);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jB_lire = new javax.swing.JButton();
        jB_parcours = new javax.swing.JButton();
        jB_affiche = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabellire = new javax.swing.JLabel();
        jLabelaffiche = new javax.swing.JLabel();
        jLabelparcours = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_affiche = new javax.swing.JTextArea();
        jLabelaction = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jB_lire.setText("lire xml");
        jB_lire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_lireActionPerformed(evt);
            }
        });

        jB_parcours.setText("parcours");
        jB_parcours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_parcoursActionPerformed(evt);
            }
        });

        jB_affiche.setText("affiche xml");
        jB_affiche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_afficheActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setText("1-interface");
        jLabel1.setMaximumSize(new java.awt.Dimension(86, 16));

        jLabellire.setText("lire fichier :");

        jLabelaffiche.setText("affiche fichier :");

        jLabelparcours.setText("parcours fichier :");

        jTextArea_affiche.setColumns(20);
        jTextArea_affiche.setRows(5);
        jScrollPane1.setViewportView(jTextArea_affiche);

        jLabelaction.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabelaction.setForeground(new java.awt.Color(204, 102, 255));
        jLabelaction.setText("RESULTAT DES ACTIONS :");

        jButton1.setText("next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelparcours)
                            .addComponent(jLabelaffiche)
                            .addComponent(jLabellire))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_affiche)
                            .addComponent(jB_parcours, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_lire, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabelaction)
                        .addGap(94, 94, 94)
                        .addComponent(jButton1)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelaction)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jB_lire)
                            .addComponent(jLabellire))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jB_affiche)
                            .addComponent(jLabelaffiche))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jB_parcours)
                            .addComponent(jLabelparcours))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB_lireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_lireActionPerformed
         
        try {
            SAXBuilder sxb =  new SAXBuilder();
             document = sxb.build(new File(fichier));
            racine =  document.getRootElement(); 
        } catch (JDOMException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        }
              

    }//GEN-LAST:event_jB_lireActionPerformed

    private void jB_parcoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_parcoursActionPerformed
    
        try {
            //On crée une instance de SAXBuilder
            SAXBuilder sxb =  new SAXBuilder();
            //On crée un nouveau document JDOM  avec en argument le fichier XML
            //Le parsing est terminé ;)
            document = sxb.build(new File(fichier));
            racine =  document.getRootElement();
            jTextArea_affiche.setText("");
            JOptionPane.showMessageDialog(null, "parcours en cours ...");
             affichelistparcours();
        } catch (JDOMException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }//GEN-LAST:event_jB_parcoursActionPerformed

    private void jB_afficheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_afficheActionPerformed
    
        //affiche system.out
        XMLOutputter sortie =  new XMLOutputter(Format.getPrettyFormat());
        try {
            sortie.output(document, System.out);
        } catch (IOException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        }
       //affiche dans le textarea  
       
            SAXBuilder sxb =  new SAXBuilder();
        try {
            document = sxb.build(new File(fichier));
        } catch (JDOMException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        }
            racine =  document.getRootElement();
            jTextArea_affiche.setText("");
            affichetousartist();
            affichetousfilm();
            
          /*   //****************methode 2 ****************
            File xmldoc=new File(fichier);
            DocumentBuilderFactory dbfact=DocumentBuilderFactory.newInstance();
            DocumentBuilder dbuild=dbfact.newDocumentBuilder();
            org.w3c.dom.Document doc=dbuild.parse(xmldoc);
            jTextArea_affiche.setText(doc.getChildNodes().toString());*/
           
            /**********methode domj4***********
             Document document;    
            org.dom4j.Element racine;
            SAXReader xmlReader = new SAXReader();
            document = xmlReader.read(fichier);
            racine =  document.getRootElement();
            XPath xpathSelector =DocumentHelper.createXPath("///FILMS");
            List liste = xpathSelector.selectNodes(document);
            for ( Iterator it = liste.iterator(); it.hasNext(); ) {
                Element element = (Element) it.next();
                System.out.println(element.getName()+" : "+element.getText()); 
            }
        } catch (DocumentException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JDOMException ex) {
            Logger.getLogger(parc.class.getName()).log(Level.SEVERE, null, ex);
        }*/
            
    }//GEN-LAST:event_jB_afficheActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       formul f=new formul();
       f.setVisible(true);
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

        static void affichetousfilm() { 
            List listFilms =  racine.getChildren("FILM");
            Iterator i =  listFilms.iterator();
            String result="";
            List listFilms1 =  racine.getChildren("FILM");
            Iterator iG =  listFilms.iterator();
            while(iG.hasNext()) 
        {           
                    Element courant=(Element)iG.next();
                    System.out.println("annee:"+courant.getAttributeValue("Annee"));
        }
            System.out.println("------------------boucle 2---------------------------------");
        while(i.hasNext()) 
        {           
                   Element courantart=(Element)i.next();
                    
                    //------------------------
                    Element courant =  (Element)i.next();
                    /* String result="--------------------Film année : "+courant.getAttributeValue("Annee")+
                    " -------------------------\n Titre : "+courant.getChild("TITRE").getText()+
                    "\n Genre : "+courant.getChild("GENRE").getText()+
                    "\n Pays : "+courant.getChild("PAYS").getText()+
                    " \n ARTISTE id  : "+courant.getChild("MES").getAttributeValue("idref");*/
                    
                     System.out.println("annee:"+courant.getAttributeValue("Annee"));
                    List ROLES =  courant.getChildren("ROLES");
                    Iterator i1 =  ROLES.iterator();
                    
                    while(i1.hasNext()) 
                        { 
                    Element courantroles =  (Element)i1.next();
                    List ROLE =  courantroles.getChildren("ROLE");
                    Iterator i2 =  ROLE.iterator();
                    /*Integer conteurole=0;*
                    conteurole++;*/
                        while(i2.hasNext()) 
                        { 
                            
                            Element courantrole =  (Element)i2.next();
             result="--------------------Film année : "+courant.getAttributeValue("Annee")+
                    " -------------------------\n Titre : "+courant.getChild("TITRE").getText()+
                    "\n Genre : "+courant.getChild("GENRE").getText()+
                    "\n Pays : "+courant.getChild("PAYS").getText()+
                    " \n ARTISTE id  : "+courant.getChild("MES").getAttributeValue("idref")+
                    " \n _______ROLES ______ : \n ***ROLE*** : \n -PRENOM : "+courantrole.getChild("PRENOM").getText()+
                                                             " \n -NOM : "+courantrole.getChild("NOM").getText()+
                                                             " \n -INTITULE : "+courantrole.getChild("INTITULE").getText()+
                    " \n RESUME : "+courant.getChild("RESUME").getText()+"\n";
                       /* result=result+" \n _______ROLES ______ : \n ***ROLE*** : \n -PRENOM : "+courantrole.getChild("PRENOM").getText()+
                                                             " \n -NOM : "+courantrole.getChild("NOM").getText()+
                                                             " \n -INTITULE : "+courantrole.getChild("INTITULE").getText();*/
                       jTextArea_affiche.append(result);
            
                        }
                    } 
                /* result=result+" \n RESUME : "+courant.getChild("RESUME").getText()+"\n";   
                 System.out.println(result);*/
                 
        }
    }
        
        static void affichelistparcours() { 
            List listFilms =  racine.getChildren("FILM");
            Iterator i =  listFilms.iterator();
           String result="";
            List listFilms1 =  racine.getChildren("FILM");
            Iterator iG =  listFilms.iterator();
            while(iG.hasNext()) 
        {           
                    Element courant=(Element)iG.next();
                    System.out.println("annee:"+courant.getAttributeValue("Annee"));
        }
            System.out.println("------------------boucle 2---------------------------------");
        while(i.hasNext()) 
        {           
                    Element courantart=(Element)i.next();
                    
                    //------------------------
                    Element courant =  (Element)i.next();
                    if(Integer.parseInt(courant.getAttributeValue("Annee"))>=1940)
                    {
                        System.out.println("annee:"+courant.getAttributeValue("Annee"));
                        
                    List ROLES =  courant.getChildren("ROLES");
                    Iterator i1 =  ROLES.iterator();
      
                    while(i1.hasNext()) 
                        { 
                    Element courantroles =  (Element)i1.next();
                    List ROLE =  courantroles.getChildren("ROLE");
                    Iterator i2 =  ROLE.iterator();
                    /*Integer conteurole=0;*
                    conteurole++;*/
                        while(i2.hasNext()) 
                        { 
                            
                            Element courantrole =  (Element)i2.next();
             result="--------------------Film année : "+courant.getAttributeValue("Annee")+
                    " -------------------------\n Titre : "+courant.getChild("TITRE").getText()+
                    "\n Genre : "+courant.getChild("GENRE").getText()+
                    "\n Pays : "+courant.getChild("PAYS").getText()+
                    " \n ARTISTE id  : "+courant.getChild("MES").getAttributeValue("idref")+
                    " \n _______ROLES ______ : \n ***ROLE*** : \n -PRENOM : "+courantrole.getChild("PRENOM").getText()+
                                                             " \n -NOM : "+courantrole.getChild("NOM").getText()+
                                                             " \n -INTITULE : "+courantrole.getChild("INTITULE").getText()+
                    " \n RESUME : "+courant.getChild("RESUME").getText()+"\n";
           
                     jTextArea_affiche.append(result); 
                        }
                    } 
                    
        }
                    
        }
    }
        
        static void affichetousartist()
        {
            List listArtiste =  racine.getChildren("ARTISTE");
            Iterator i =  listArtiste.iterator();
        while(i.hasNext()) 
        {           
                    Element courantart=(Element)i.next();
                     String result="--------------------ARTISTE id : "+courantart.getAttributeValue("id")+
                    "--------------- \n ACTNOM : "+courantart.getChild("ACTNOM").getText()+
                    " \n ACTPNOM : "+courantart.getChild("ACTPNOM").getText()+
                    " \n ANNEENAISS : "+courantart.getChild("ANNEENAISS").getText()+"\n";
            jTextArea_affiche.append(result);
        }
        }
       
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(parc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(parc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(parc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(parc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new parc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_affiche;
    private javax.swing.JButton jB_lire;
    private javax.swing.JButton jB_parcours;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelaction;
    private javax.swing.JLabel jLabelaffiche;
    private javax.swing.JLabel jLabellire;
    private javax.swing.JLabel jLabelparcours;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea_affiche;
    // End of variables declaration//GEN-END:variables
}
